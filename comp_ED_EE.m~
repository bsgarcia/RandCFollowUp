%-------------------------------------------------------------------------
init;
%-------------------------------------------------------------------------

selected_exp = [6.2];
sessions = [0, 1];

displayfig = 'on';

num = 0;
for exp_num = selected_exp
    num = num + 1;
    
    clear qvalues b pY2 ind_point Y
    
    idx1 = (exp_num - round(exp_num)) * 10;
    idx1 = idx1 + (idx1==0);
    sess = sessions(uint64(idx1));
    % load data
    name = char(filenames{round(exp_num)});
    
    data = d.(name).data;
    sub_ids = d.(name).sub_ids;
    nsub = d.(name).nsub;
       
    param = load(...
        sprintf('data/post_test_fitparam_ED_exp_6_2', num2str(exp_num)));
    shift1 = param.shift;
      
    param = load(...
        sprintf('data/post_test_fitparam_EE_exp_6_2', num2str(exp_num)));
    shift2 = param.shift;
    
    [corr, cho, out2, p1, p2, ev1, ev2, ctch, cont1, cont2, dist] = ...
        DataExtraction.extract_sym_vs_lot_post_test(...
        data, sub_ids, idx, sess);
    
    ev = unique(p1);
    varargin = ev;
    x_values = ev;
    x_lim = [0, 1];
    
    
    figure('Renderer', 'painters',...
    'Position', [145,157,800,550], 'visible', 'on')

    
    brick_comparison_plot2(...
        shift1',shift2',...
        orange_color, blue_color, ...
        [0, 1], 11,...
        '',...
        '',...
        '', varargin, 1, x_lim, x_values);
    
    slope1 = add_linear_reg(shift1, ev, orange_color);
    slope2 = add_linear_reg(shift2, ev, blue_color);
        
   
    xlabel('Experienced cue win probability');
    box off
    hold on
    
    set(gca, 'fontsize', fontsize);
    
    %set(gca, 'ytick', [0:10]./10);
    set(gca,'TickDir','out')
    
    
    figure('Renderer', 'painters',...
    'Position', [145,157,800,550], 'visible', 'on')
    
    dd(:, 1) 
    skylineplot({{slope1(:, 2)'} {slope2(:, 2)'}},...
        [orange_color; blue_color],...
        0,...
        1,...
        20,...
        '',...
        '',...
        '',...
        {'ED', 'EE'},...
        0);

    clear pp p_lot p_sym temp err_prop prop i p1 p2 cho
  
end
