function ll = getll_learning(params, s, a, cfa, r, cfr, ntrials)

    beta1 = params(1);
    alpha1 = params(2);
    ll = 0;
    ncond = length(unique(s));
    Q = zeros(ncond, 2)+.5;
    
    for t = 1:ntrials
        
        D(a(t)) = Q(s(t), a(t))*1 + (1-Q(s(t), a(t)))*-1;
        D(3-a(t)) = Q(s(t), 3-a(t))*1 + (1-Q(s(t), 3-a(t)))*-1;
        
        ll = ll + (D(a(t))*beta1) - log(sum(exp(D(:).*beta1)));
        
        deltaI = (r(t)==1) - Q(s(t), a(t));
                    cfdeltaI = (cfr(t)==1) - Q(s(t), cfa(t));

        Q(s(t), a(t)) = Q(s(t), a(t)) + alpha1 * deltaI;
        if cfa(t) ~= -2
            Q(s(t), cfa(t)) = Q(s(t), cfa(t)) + alpha1 * cfdeltaI;
        end
    end

ll = -ll;
end